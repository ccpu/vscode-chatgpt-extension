{
  "name": "vscode-openai",
  "publisher": "molab",
  "displayName": "ChatGPT - Copilot to improve your code, add tests & find bugs",
  "icon": "images/ai-logo.jpg",
  "description": "ChatGPT conversation support. Create new files & projects with one click",
  "version": "1.6.2",
  "repository": {
    "url": "https://github.com/ccpu/vscode-openai-extension"
  },
  "engines": {
    "vscode": "^1.73.0"
  },
  "categories": [
    "Testing",
    "Data Science",
    "Formatters",
    "Programming Languages",
    "Linters"
  ],
  "keywords": [
    "copilot",
    "openai",
    "chatgpt",
    "testing",
    "find bugs",
    "ai"
  ],
  "activationEvents": [
    "onView:vscode-chatgpt.view",
    "onCommand:vscode-chatgpt.clearSession",
    "onCommand:vscode-chatgpt.freeText",
    "onCommand:vscode-chatgpt.addTests",
    "onCommand:vscode-chatgpt.findProblems",
    "onCommand:vscode-chatgpt.optimize",
    "onCommand:vscode-chatgpt.explain",
    "onCommand:vscode-chatgpt.clearConversation",
    "onCommand:vscode-chatgpt.exportConversation"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "menus": {
      "editor/context": [
        {
          "command": "vscode-chatgpt.refactor",
          "when": "editorHasSelection",
          "group": "chatGpt@3"
        },
        {
          "command": "vscode-chatgpt.addTests",
          "group": "chatGpt@1",
          "when": "editorHasSelection"
        },
        {
          "command": "vscode-chatgpt.findProblems",
          "group": "chatGpt@2",
          "when": "editorHasSelection"
        },
        {
          "command": "vscode-chatgpt.optimize",
          "group": "chatGpt@3",
          "when": "editorHasSelection"
        },
        {
          "command": "vscode-chatgpt.explain",
          "group": "chatGpt@4",
          "when": "editorHasSelection"
        },
        {
          "command": "vscode-chatgpt.rewrite",
          "when": "editorHasSelection",
          "group": "chatGpt@3"
        },
        {
          "command": "vscode-chatgpt.generate",
          "when": "editorHasSelection",
          "group": "chatGpt@3"
        },
        {
          "command": "vscode-chatgpt.ask",
          "when": "editorHasSelection",
          "group": "chatGpt@3"
        }
      ]
    },
    "commands": [
      {
        "command": "vscode-chatgpt.freeText",
        "title": "ChatGPT: Ask anything"
      },
      {
        "command": "vscode-chatgpt.clearSession",
        "title": "ChatGPT: Clear session"
      },
      {
        "command": "vscode-chatgpt.refactor",
        "title": "ChatGPT: Refactor Code",
        "when": "editorHasSelection"
      },
      {
        "command": "vscode-chatgpt.generate",
        "title": "ChatGPT: Generate Code",
        "when": "editorHasSelection"
      },
      {
        "command": "vscode-chatgpt.addTests",
        "title": "ChatGPT: Add Tests",
        "enablement": "editorHasSelection"
      },
      {
        "command": "vscode-chatgpt.findProblems",
        "title": "ChatGPT: Find Bugs",
        "enablement": "editorHasSelection"
      },
      {
        "command": "vscode-chatgpt.optimize",
        "title": "ChatGPT: Optimize Code",
        "enablement": "editorHasSelection"
      },
      {
        "command": "vscode-chatgpt.explain",
        "title": "ChatGPT: Explain Code",
        "enablement": "editorHasSelection"
      },
      {
        "command": "vscode-chatgpt.clearConversation",
        "title": "ChatGPT: Clear Conversation"
      },
      {
        "command": "vscode-chatgpt.exportConversation",
        "title": "ChatGPT: Export Conversation"
      },
      {
        "command": "vscode-chatgpt.rewrite",
        "title": "ChatGPT: Rewrite"
      },
      {
        "command": "vscode-chatgpt.ask",
        "title": "ChatGPT: Ask",
        "when": "editorHasSelection"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "chatgpt-view-container",
          "title": "ChatGPT",
          "icon": "images/openai-transparent.png"
        }
      ]
    },
    "views": {
      "chatgpt-view-container": [
        {
          "type": "webview",
          "id": "vscode-chatgpt.view",
          "name": "Conversation window"
        }
      ]
    },
    "configuration": {
      "title": "ChatGPT",
      "properties": {
        "chatgpt.apiKey": {
          "type": "string",
          "description": "A session token you get when logged into chat.openai.com",
          "order": 1
        },
        "chatgpt.promptPrefix.refactor": {
          "type": "string",
          "default": "Refactor this code and explain what's changed: ",
          "description": "The prompt prefix used for refactoring the selected code"
        },
        "chatgpt.promptPrefix.generate": {
          "type": "string",
          "default": "Generate code base on following texts: ",
          "description": "The prompt prefix used generate code base on texts"
        },
        "chatgpt.promptPrefix.ask": {
          "type": "string"
        },
        "chatgpt.promptPrefix.rewrite": {
          "type": "string",
          "default": "Rewrite this sentences: ",
          "description": "Will try to rewrite sentences."
        },
        "chatgpt.promptPrefix.addTests": {
          "type": "string",
          "default": "Implement tests for the following code:",
          "description": "The prompt prefix used for adding tests for the selected code"
        },
        "chatgpt.promptPrefix.findProblems": {
          "type": "string",
          "default": "Find problems with the following code: ",
          "description": "The prompt prefix used for finding problems for the selected code"
        },
        "chatgpt.promptPrefix.optimize": {
          "type": "string",
          "default": "Optimize the following code: ",
          "description": "The prompt prefix used for optimizing the selected code"
        },
        "chatgpt.promptPrefix.explain": {
          "type": "string",
          "default": "Explain the following code: ",
          "description": "The prompt prefix used for explaining the selected code"
        },
        "chatgpt.response.showNotification": {
          "type": "boolean",
          "default": false,
          "description": "Choose whether you'd like to receive a notification when ChatGPT bot responds to your query."
        },
        "chatgpt.maxTokens": {
          "type": "number",
          "default": 1000,
          "description": "The maximum number of [tokens](/tokenizer) to generate in the completion.  The token count of your prompt plus `max_tokens` cannot exceed the model's context length. Most models have a context length of 2048 tokens (except for the newest models, which support 4096)."
        },
        "chatgpt.model": {
          "type": "string",
          "default": "text-davinci-003",
          "description": "ID of the model to use. You can use the [List models](/docs/api-reference/models/list) API to see all of your available models, or see our [Model overview](/docs/models/overview) for descriptions of them."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run esbuild-base -- --minify",
    "esbuild-base": "rimraf out && esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
    "build": "npm run -S esbuild-base -- --sourcemap",
    "watch": "npm run -S esbuild-base -- --sourcemap --watch",
    "fmt": "prettier --write \"src/**/*.ts\"&& npm run test -- --fix",
    "test": "eslint src --ext ts && tsc --noEmit"
  },
  "devDependencies": {
    "@types/glob": "^8.0.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.73.0",
    "@types/vscode-webview": "^1.57.0",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "@vscode/test-electron": "^2.2.0",
    "esbuild": "^0.15.18",
    "eslint": "^8.28.0",
    "glob": "^8.0.3",
    "mocha": "^10.1.0",
    "ts-loader": "^9.4.1",
    "typescript": "^4.9.3"
  },
  "dependencies": {
    "openai-fork": "^3.1.0"
  }
}